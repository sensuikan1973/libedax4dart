name: publish_libedax_assets

on:
  release:
    types: [created]

jobs:
  build:
    env:
      OUTPUT_DIR: libedax_output
      PUBLISH_DIR: dst
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
        include:
          - os: ubuntu-20.04
            libedax_build_command: make libbuild ARCH=x64 COMP=gcc OS=linux
          - os: windows-2019
            libedax_build_command: make libbuild ARCH=x64 COMP=gcc OS=windows
          - os: macos-11
            libedax_build_command: make libbuild ARCH=x64-modern COMP=gcc OS=osx

    steps:
      - uses: actions/checkout@v3

      - name: build libedax
        shell: bash
        env:
          dst: ${{ env.OUTPUT_DIR }}
          libedax_build_command: ${{ matrix.libedax_build_command }}
        run: ./scripts/build_libedax.sh

      - name: output build info
        shell: bash
        run: .github/scripts/output_build_info.sh ${{ env.OUTPUT_DIR }} gcc && cat ${{ env.OUTPUT_DIR }}/env.txt

      - name: zip files (Windows)
        if: runner.os == 'Windows'
        run: mkdir -p ${{ env.PUBLISH_DIR }} && powershell Compress-Archive -Path ${{ env.OUTPUT_DIR }} -DestinationPath ${{ env.PUBLISH_DIR }}/${{ runner.os }}.zip
      - name: zip files (Linux, MacOS)
        if: runner.os == 'macOS' || runner.os == 'Linux'
        run: mkdir -p ${{ env.PUBLISH_DIR }} && zip -r ${{ env.PUBLISH_DIR }}/${{ runner.os }}.zip ${{ env.OUTPUT_DIR }}

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.PUBLISH_DIR }}/${{ runner.os }}.zip
          asset_name: libedax_${{ runner.os }}.zip
          asset_content_type: application/zip
